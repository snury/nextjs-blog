import React from 'react';
import Typed from 'typed.js';
import styles from './typedText1.module.css';

const TypedReactHooksDemo = () => {
	// Create reference to store the DOM element containing the animation
	const el = React.useRef(null);
  // Create reference to store the Typed instance itself
	const typed = React.useRef(null);

  React.useEffect(() => {
    const options = {
    	strings: [
        '–ü—Ä–∏–≤—ñ—Ç, –º–æ—î –ö–æ—Ö–∞–Ω–Ω—è',
        `–¶–µ web-–ª–∏–Ω—Ç–∏–Ω–∫–∞ —â–æ–± —Å–∫–∞–∑–∞—Ç–∏ —Ç–æ–±—ñ`, 
        `–Ω–∞—Å–∫—ñ–ª—å–∫–∏ —Å–∏–ª—å–Ω–æ —è —Ç–µ–±–µ –ª—é–±–ª—é`,
        `–Ω–µ —Ç—ñ–ª—å–∫–∏ —Ü—å–æ–≥–æ –¥–Ω—è, –∞ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è`, 
        `–∑ –º–æ–º–µ–Ω—É –∫–æ–ª–∏ –≤–ø–µ—Ä—à–µ –ø–æ–±–∞—á–∏–≤ —Ç–µ–±–µ`,
        `–¢–∏ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∞ –ª—é–¥–∏–Ω–∫–∞!`,
         `–Ω–∞–π–∫—Ä–∞—Å–∏–≤—ñ—à–∞, –Ω–∞–π–ø—Ä–µ–∫—Ä–∞—Å–Ω—ñ—à–∞ —ñ —É–º–Ω—ñ—à–∞`,
        `–ó —Ç–æ–±–æ—é –≤ –º–µ–Ω–µ —î –±—ñ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –∂–∏—Ç—Ç—è`, 
        `—ñ —è —Ö–æ—á—É –±—É—Ç–∏ —Ç–æ–±–æ—é`, 
        `–∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É, —Ö–≤–∏–ª–∏–Ω—É, –≥–æ–¥–∏–Ω—É, –≤—ñ—á–Ω—ñ—Å—Ç—å...`,
        `–ú—ñ–π –ø–æ—Ü—ñ–ª—É–Ω–æ—á–æ–∫ –¥–ª—è —Ç–µ–±–µ üòò`,
        `–õ—é–±–ª—é —Ç–µ–±–µ –±—ñ–ª—å—à–µ –∑–∞ –∂–∏—Ç—Ç—è`,
        `–î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ, –º–æ—è –Æ–ª—å–∫–∞! ü§ó`
      ],
      typeSpeed: 100,
      backSpeed: 30
    };
    
    // elRef refers to the <span> rendered below
    typed.current = new Typed(el.current, options);
    
    return () => {
      // Make sure to destroy Typed instance during cleanup
      // to prevent memory leaks
      typed.current.destroy();
    }
  }, [])

  return (
    <div className={styles.container}>
      <div className={styles.wrap}>
        <span style={{ whiteSpace: 'pre' }} ref={el} />
      </div>
    </div>
  );
}

export default TypedReactHooksDemo;
